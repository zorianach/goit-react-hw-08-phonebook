{"version":3,"file":"static/js/551.0cb35123.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Forms/AddContactForm/AddContactForm.styled.jsx","components/Forms/AddContactForm/AddContactForm.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst ContactListStyle = styled.ul`\n    padding: 0px;\n    // margin-left: 20px;\n    margin: 0px;\n    width: 400px;\n    list-style-type: disc;\n`\nconst ContactItem = styled.li`\n    display: flex;\n    // justify-content: flex-start;\n    justify-content: space-between;\n    gap: 20px;\n    width: 372px;\n    padding: 0;\n    align-items: center;\n    \n    span {\n      color: rgb(32, 12, 51);\n      font-weight: 600;\n    }\n`;\n\nconst Line = styled.p`\nmargin: 0px;\nline-height: 2;\n// margin-left: 40px;\n`;\n\nconst Buttons = styled.div`\ndisplay: flex;\ngap: 5px;\n`\n\nconst DeleteButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 1px 6px;\n  \n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:hover {\n    background: rgb(136, 51, 215);\n    // border: #ffffff;\n    color: #ffffff;\n    font-weight: 500;\n  }\n`;\nconst AddFavouriteButton = styled.button`\ndisplay: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 1px 6px;\n  \n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:hover {\n    background: rgb(136, 51, 215);\n    // border: 1px solid #ffffff;\n    color: #ffffff;\n    font-weight: 500;\n  }\n`\nexport {ContactListStyle, ContactItem, Line, Buttons, DeleteButton, AddFavouriteButton};","\nimport {  useDispatch, useSelector } from \"react-redux\";\nimport { ContactListStyle, ContactItem, Line, Buttons, DeleteButton } from \"./ContactList.styled\";\nimport { Notify } from \"notiflix\";\nimport { paramsForNotify } from \"components/paramsForNotify\";\nimport { deleteContactThunk } from \"../../redux/contactsSlice/thunks\";\nimport { selectFilteredContacts } from \"../../redux/selectors\";\n// import { LuHeart } from \"react-icons/lu\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\n\n\nconst ContactList = () => {\n\n    const contacts = useSelector(selectFilteredContacts);\n    // console.log('contacts', contacts)\n    const dispatch = useDispatch();\n \n    const onDeleteContact = (id, name) => {\n        dispatch(deleteContactThunk(id))\n        return (Notify.info(`Contact ${name} has been deleted from your Contacts`, paramsForNotify))\n \n      };\n    return ( <ContactListStyle>\n            {contacts.map(({name, number, id}) => {\n                return (\n                <ContactItem key={id} >\n                    <Line >{name}:    <span>{number}</span></Line>\n                    <Buttons>\n                    <DeleteButton title=\"Delete contact\" type=\"button\" onClick={() => onDeleteContact(id, name)}>\n                        <RiDeleteBin5Line/>\n                    </DeleteButton>\n                    {/* <AddFavouriteButton title=\"Add contact to the Favourites\" type=\"button\">\n                        <LuHeart />\n                    </AddFavouriteButton> */}\n                    </Buttons>\n                </ContactItem>\n            )})}\n        </ContactListStyle>\n    );\n            }\n    export default ContactList;\n ","import styled from 'styled-components'\n\nconst FormFilter = styled.form`\ndisplay: flex;\n// flex-direction: column;\nflex-direction: column;\ngap: 8px;\njustify-content: start;\n// margin-left: 20px;\n`;\nconst LabelFilter = styled.label`\ncolor: black\ndisplay: block;\n`;\nconst InputFilter = styled.input`\nwidth: 350px;\n  background: transparent;\n  border: 1px solid black;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 30px;`;\n\nexport {FormFilter, LabelFilter, InputFilter}","import { useDispatch, useSelector } from 'react-redux';\nimport {FormFilter, LabelFilter, InputFilter} from './Filter.styled';\nimport { changeFilter } from '../../redux/filterSlice';\nimport { selectFilter } from '../../redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n    // console.log('filterComponent', filterValue)  \n  \n    const setFilter = (e) => {\n    // const {value} = e.target;\n    // console.log('value', value)\n    dispatch(changeFilter(e.target.value))\n  };\n\n  return (\n    <FormFilter>\n      <LabelFilter> Find contact:\n      </LabelFilter>\n      <InputFilter\n          type=\"name\"\n          value={filterValue}\n          onChange={setFilter}\n          placeholder=\"Please enter a name or number to search\"\n        />\n    </FormFilter>\n  );\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-top:20px;\n  // margin-left: 20px;\n`;\n\nconst Label = styled.label`\ncolor: black;\nmargin-bottom: 10px;\n`;\n\nconst Input = styled.input`\n  width: 350px;\n  margin-bottom: 15px;\n  background: transparent;\n  border: 1px solid black;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 30px;\n  &:focus {\n    // border: 1px solid blue;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 5px 15px 5px;\n  \n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:hover {\n    background: rgb(88, 142, 240);\n    // border: #ffffff;\n    color: #ffffff;\n    font-weight: 500;\n  }\n`;\n\nexport {Form, Label, Input, Button}\n","import { useState } from \"react\";\n// import {Form, Label, Input, Button} from \"\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Notify } from \"notiflix\";\nimport { paramsForNotify } from \"components/paramsForNotify\";\n// import { nanoid } from \"@reduxjs/toolkit\";\nimport { addContactThunk } from \"../../../redux/contactsSlice/thunks\";\nimport { selectAllContacts } from \"../../../redux/selectors\";\nimport { Form, Label, Input, Button} from \"./AddContactForm.styled\";\n// import { nanoid } from \"@reduxjs/toolkit\";\n\nconst AddContactForm = ()=> {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const {contacts} = useSelector(selectAllContacts);\n  // console.log('contacts', contacts)\n  // const token \n  const dispatch = useDispatch();\n\n  // console.log('contacts', contacts)\n  const handleChange = (e) =>  {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const newContact = {name, number };\n    const normalizedName = name.toLowerCase();\n   const isAdded = contacts.find(el => el.name.toLowerCase() === normalizedName) \n\n   if (isAdded) {\n    Notify.failure(`${name}: is already in contacts`, paramsForNotify)\n    setName('')\n    setNumber('')\n    return;\n  }\n    dispatch(addContactThunk(newContact))\n    Notify.success(`Contact ${name} has been added to your Contacts`, paramsForNotify)\n    resetForm();\n  }\n\n  const resetForm = () => {\n    setName('')\n    setNumber('')\n    };\n  \n    return (\n      <>\n      <Form onSubmit={handleSubmit} >\n      <Label htmlFor='exampleInputEmail1' className='form-label'>\n        Name\n      </Label>\n      <Input\n        name='name'\n        type='text'\n        className='form-control'\n        id='exampleInputEmail1'\n        aria-describedby='emailHelp'\n        value={name}\n        onChange={handleChange}\n        required\n      />\n      <Label htmlFor='exampleInputEmail1' className='form-label'>\n        Number\n      </Label>\n      <Input \n      type=\"tel\" \n      name=\"number\" \n      value={number}\n      onChange={handleChange}\n      required\n      />\n    <Button type='submit' className='btn btn-primary'>\n      Add contact\n    </Button>\n  </Form>\n  </>\n    )\n  };  \n\n\nexport default AddContactForm;","import styled from 'styled-components';\n\n\nconst LoaderWrapper = styled.div`\n    text-align: center;\n`\n\nexport {LoaderWrapper}","import { RotatingLines } from \"react-loader-spinner\";\nimport { LoaderWrapper } from \"./Loader.styled\";\n\n\nconst Loader =()=>{\n    return(\n    <LoaderWrapper>\n        <RotatingLines\n            strokeColor=\"rgb(81, 29, 131)\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n            />\n    </LoaderWrapper>)\n    \n}\n\nexport default Loader;","import styled from 'styled-components';\n\nconst SectionBox = styled.section `\nmargin-bottom: 15px; \nwidth: 400px;\nborder: 2px solid rgb(81, 29, 131); \nborder-radius: 15px;\npadding: 15px;\nbackground-color: rgba(255, 255, 255, 0.867);\n// overflow-y:scroll;\n`;\nconst Title = styled.h1`\n// color: rgb(1, 24, 1);\ncolor: rgb(32, 12, 51);\nfont-size: 32px;\n// margin-left: 20px;\n`;\n\nexport {Title, SectionBox}","import { SectionBox, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n    return (\n        <SectionBox>\n        <Title>{title}</Title>\n        {children}\n      </SectionBox>\n    )\n};\n\nexport default Section ;","import ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport AddContactForm from 'components/Forms/AddContactForm/AddContactForm';\nimport Loader from 'components/Loader/Loader';\nimport Section from 'components/Section/Section';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllContactsThunk } from '../redux/contactsSlice/thunks';\nimport { selectIsLoading } from '../redux/selectors';\n\nconst ContactsPage = () => {\nconst dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading)\n\n\n  useEffect(() => {\n    dispatch(fetchAllContactsThunk());\n  }, [dispatch]);\n \n\n  return (\n      <>\n       <Section title=\"Phonebook\">\n        <AddContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter/>\n        <ContactList />\n        {isLoading && <Loader/>}\n     </Section>\n    </>\n  )\n}\n\nexport default ContactsPage"],"names":["ContactListStyle","styled","_templateObject","_taggedTemplateLiteral","ContactItem","_templateObject2","Line","_templateObject3","Buttons","_templateObject4","DeleteButton","_templateObject5","_templateObject6","contacts","useSelector","selectFilteredContacts","dispatch","useDispatch","_jsx","children","map","_ref","name","number","id","_jsxs","title","type","onClick","deleteContactThunk","Notify","concat","paramsForNotify","onDeleteContact","RiDeleteBin5Line","FormFilter","LabelFilter","InputFilter","filterValue","selectFilter","value","onChange","e","changeFilter","target","placeholder","Form","Label","Input","Button","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","selectAllContacts","handleChange","_e$target","resetForm","_Fragment","onSubmit","preventDefault","newContact","normalizedName","toLowerCase","find","el","addContactThunk","htmlFor","className","required","LoaderWrapper","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","SectionBox","Title","isLoading","selectIsLoading","useEffect","fetchAllContactsThunk","Section","AddContactForm","Filter","ContactList","Loader"],"sourceRoot":""}